import jwt from 'jsonwebtoken';
import { Server as SocketIoServer } from 'socket.io';
import fastify from 'fastify';
import { authorize } from '../../index.js';
export const PORT = 9000;
export const API_URL = `http://localhost:${PORT}`;
export const basicProfile = {
    email: 'john@doe.com',
    id: 123
};
let application = null;
export const fixtureStart = async (options = {
    secret: 'super secret'
})=>{
    const profile = {
        ...basicProfile,
        checkField: true
    };
    let keySecret = '';
    if (typeof options.secret === 'string') {
        keySecret = options.secret;
    } else {
        keySecret = await options.secret({
            header: {
                alg: 'HS256'
            },
            payload: profile
        });
    }
    application = fastify();
    application.post('/login', async (_request, reply)=>{
        const token = jwt.sign(profile, keySecret, {
            expiresIn: 60 * 60 * 5
        });
        reply.statusCode = 201;
        return {
            token
        };
    });
    application.post('/login-wrong', async (_request, reply)=>{
        profile.checkField = false;
        const token = jwt.sign(profile, keySecret, {
            expiresIn: 60 * 60 * 5
        });
        reply.statusCode = 201;
        return {
            token
        };
    });
    const instance = new SocketIoServer(application.server);
    instance.use(authorize(options));
    application.decorate('io', {
        instance
    });
    application.addHook('onClose', (fastify)=>{
        fastify.io.instance.close();
    });
    await application.listen({
        port: PORT
    });
};
export const fixtureStop = async ()=>{
    await application?.close();
};
export const getSocket = ()=>{
    return application?.io.instance;
};

//# sourceMappingURL=index.js.map